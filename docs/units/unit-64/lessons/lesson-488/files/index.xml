<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Files on Python I</title>
    <link>https://lapinel-6.course-manager.app/units/unit-64/lessons/lesson-488/files/</link>
    <description>Recent content in Files on Python I</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://lapinel-6.course-manager.app/units/unit-64/lessons/lesson-488/files/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assignment 4.3</title>
      <link>https://lapinel-6.course-manager.app/units/unit-64/lessons/lesson-488/files/assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lapinel-6.course-manager.app/units/unit-64/lessons/lesson-488/files/assignment/</guid>
      <description>&lt;h1 id=&#34;assignment-43-scope&#34;&gt;Assignment 4.3: Scope&lt;/h1&gt;&#xA;&lt;h2 id=&#34;prepare&#34;&gt;Prepare&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Review Lesson 4.3 slides.&lt;/li&gt;&#xA;&lt;li&gt;Revisit Python Essentials on local vs. global variables.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;practice&#34;&gt;Practice&lt;/h2&gt;&#xA;&lt;h3 id=&#34;part-a-local-scope&#34;&gt;Part A: Local Scope&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write a function &lt;code&gt;make_local()&lt;/code&gt; that creates a variable &lt;code&gt;x = 10&lt;/code&gt; inside the function and returns it.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Try printing &lt;code&gt;x&lt;/code&gt; outside the function. What happens?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;part-b-global-scope&#34;&gt;Part B: Global Scope&lt;/h3&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Create a global variable &lt;code&gt;school = &amp;quot;Berry&amp;quot;&lt;/code&gt;.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write a function &lt;code&gt;get_school()&lt;/code&gt; that returns &lt;code&gt;school&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Call the function and print the result.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;part-c-shadowing&#34;&gt;Part C: Shadowing&lt;/h3&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Write a global variable &lt;code&gt;score = 100&lt;/code&gt;.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inside a function, create a local &lt;code&gt;score = 50&lt;/code&gt; and return it.&lt;/li&gt;&#xA;&lt;li&gt;Print both values (inside and outside the function).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;part-d-global-keyword&#34;&gt;Part D: Global Keyword&lt;/h3&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Write a global variable &lt;code&gt;counter = 0&lt;/code&gt;.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write a function &lt;code&gt;increment()&lt;/code&gt; that uses &lt;code&gt;global counter&lt;/code&gt; to add 1 each time it runs.&lt;/li&gt;&#xA;&lt;li&gt;Call it multiple times and print &lt;code&gt;counter&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Explain why this is not a good practice.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;part-e-better-design&#34;&gt;Part E: Better Design&lt;/h3&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Rewrite the &lt;code&gt;increment()&lt;/code&gt; function so that it takes a number as input and returns it increased by 1 (no globals).&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
