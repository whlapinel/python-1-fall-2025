<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Files on Python I</title>
    <link>https://lapinel-6.course-manager.app/units/unit-61/lessons/lesson-464/files/</link>
    <description>Recent content in Files on Python I</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://lapinel-6.course-manager.app/units/unit-61/lessons/lesson-464/files/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://lapinel-6.course-manager.app/units/unit-61/lessons/lesson-464/files/assignment-1-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lapinel-6.course-manager.app/units/unit-61/lessons/lesson-464/files/assignment-1-8/</guid>
      <description>&lt;h1 id=&#34;assignment-18-unit-1-assessment---interactive-python-console-application&#34;&gt;Assignment 1.8: Unit 1 Assessment - Interactive Python Console Application&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Type: PERFORM | Due: End of Week 2 | Points: 100&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Create a comprehensive interactive console application that demonstrates mastery of all PCEP Section 1 objectives. Your program should be engaging, user-friendly, and showcase proper Python programming practices.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pcep-section-1-objectives-demonstrated&#34;&gt;PCEP Section 1 Objectives Demonstrated&lt;/h2&gt;&#xA;&lt;p&gt;Your project must clearly demonstrate ALL of the following PCEP-30-02 Section 1 objectives:&lt;/p&gt;&#xA;&lt;h3 id=&#34;pcep-11---fundamental-terms-and-definitions&#34;&gt;PCEP 1.1 - Fundamental Terms and Definitions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use Python as an interpreted language (no compilation step needed)&lt;/li&gt;&#xA;&lt;li&gt;Demonstrate understanding of proper Python syntax and semantics&lt;/li&gt;&#xA;&lt;li&gt;Include comments explaining your code&amp;rsquo;s lexical elements&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pcep-12---python-logic-and-structure&#34;&gt;PCEP 1.2 - Python Logic and Structure&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use Python keywords appropriately&lt;/li&gt;&#xA;&lt;li&gt;Implement proper indentation for code blocks&lt;/li&gt;&#xA;&lt;li&gt;Include meaningful comments throughout your code&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pcep-13---literals-and-variables&#34;&gt;PCEP 1.3 - Literals and Variables&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use Boolean, integer, floating-point, and string literals&lt;/li&gt;&#xA;&lt;li&gt;Demonstrate at least 2 different numeral systems (binary, octal, hex)&lt;/li&gt;&#xA;&lt;li&gt;Create variables following PEP-8 naming conventions&lt;/li&gt;&#xA;&lt;li&gt;Use scientific notation where appropriate&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pcep-14---operators-and-data-types&#34;&gt;PCEP 1.4 - Operators and Data Types&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use arithmetic operators: &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;âˆ’&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Use string operators: &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Use assignment and shortcut operators&lt;/li&gt;&#xA;&lt;li&gt;Demonstrate operator precedence understanding&lt;/li&gt;&#xA;&lt;li&gt;Use Boolean operators: &lt;code&gt;not&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Use relational operators: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Include type casting operations&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;pcep-15---inputoutput-operations&#34;&gt;PCEP 1.5 - Input/Output Operations&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;code&gt;print()&lt;/code&gt; function with &lt;code&gt;sep&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; parameters&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;input()&lt;/code&gt; function for user interaction&lt;/li&gt;&#xA;&lt;li&gt;Combine input with type conversion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;project-options&#34;&gt;Project Options&lt;/h2&gt;&#xA;&lt;p&gt;Choose ONE of the following project types:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
